{"version":3,"sources":["jquery.lettering.js"],"names":["$","injector","t","splitter","klass","after","text","a","split","inject","length","each","i","item","attr","empty","append","methods","init","this","words","lines","r","children","replaceWith","end","fn","lettering","method","apply","slice","call","arguments","error","jQuery"],"mappings":";;;;;;;;;;;CAYA,SAAUA,GACT,SAASC,EAASC,EAAGC,EAAUC,EAAOC,GACrC,IAAIC,EAAOJ,EAAEI,OACXC,EAAID,EAAKE,MAAML,GACfM,EAAS,GACPF,EAAEG,SACLV,EAAEO,GAAGI,MAAK,SAASC,EAAGC,GACrBJ,GAAU,gBAAgBL,GAAOQ,EAAE,GAAG,wBAAwBC,EAAK,UAAUR,KAE9EH,EAAEY,KAAK,aAAaR,GACnBS,QACAC,OAAOP,IAMV,IAAIQ,EAAU,CACbC,KAAO,WAEN,OAAOC,KAAKR,MAAK,WAChBV,EAASD,EAAEmB,MAAO,GAAI,OAAQ,QAKhCC,MAAQ,WAEP,OAAOD,KAAKR,MAAK,WAChBV,EAASD,EAAEmB,MAAO,IAAK,OAAQ,SAKjCE,MAAQ,WAEP,OAAOF,KAAKR,MAAK,WAChB,IAAIW,EAAI,mCAKRrB,EAASD,EAAEmB,MAAMI,SAAS,MAAMC,YAAYF,GAAGG,MAAOH,EAAG,OAAQ,SAMpEtB,EAAE0B,GAAGC,UAAY,SAAUC,GAE1B,OAAKA,GAAUX,EAAQW,GACfX,EAASW,GAASC,MAAOV,KAAM,GAAGW,MAAMC,KAAMC,UAAW,IAC1C,YAAXJ,GAA0BA,GAGtC5B,EAAEiC,MAAO,UAAaL,EAAS,uCACxBT,MAHCF,EAAQC,KAAKW,MAAOV,KAAM,GAAGW,MAAMC,KAAMC,UAAW,KArD9D,CA2DGE","file":"jquery.lettering.js","sourcesContent":["/*global jQuery */\n/*!\n* Lettering.JS 0.7.0\n*\n* Copyright 2010, Dave Rupert http://daverupert.com\n* Released under the WTFPL license\n* http://sam.zoy.org/wtfpl/\n*\n* Thanks to Paul Irish - http://paulirish.com - for the feedback.\n*\n* Date: Mon Sep 20 17:14:00 2010 -0600\n*/\n(function($){\n\tfunction injector(t, splitter, klass, after) {\n\t\tvar text = t.text()\n\t\t, a = text.split(splitter)\n\t\t, inject = '';\n\t\tif (a.length) {\n\t\t\t$(a).each(function(i, item) {\n\t\t\t\tinject += '<span class=\"'+klass+(i+1)+'\" aria-hidden=\"true\">'+item+'</span>'+after;\n\t\t\t});\n\t\t\tt.attr('aria-label',text)\n\t\t\t.empty()\n\t\t\t.append(inject)\n\n\t\t}\n\t}\n\n\n\tvar methods = {\n\t\tinit : function() {\n\n\t\t\treturn this.each(function() {\n\t\t\t\tinjector($(this), '', 'char', '');\n\t\t\t});\n\n\t\t},\n\n\t\twords : function() {\n\n\t\t\treturn this.each(function() {\n\t\t\t\tinjector($(this), ' ', 'word', ' ');\n\t\t\t});\n\n\t\t},\n\n\t\tlines : function() {\n\n\t\t\treturn this.each(function() {\n\t\t\t\tvar r = \"eefec303079ad17405c889e092e105b0\";\n\t\t\t\t// Because it's hard to split a <br/> tag consistently across browsers,\n\t\t\t\t// (*ahem* IE *ahem*), we replace all <br/> instances with an md5 hash\n\t\t\t\t// (of the word \"split\").  If you're trying to use this plugin on that\n\t\t\t\t// md5 hash string, it will fail because you're being ridiculous.\n\t\t\t\tinjector($(this).children(\"br\").replaceWith(r).end(), r, 'line', '');\n\t\t\t});\n\n\t\t}\n\t};\n\n\t$.fn.lettering = function( method ) {\n\t\t// Method calling logic\n\t\tif ( method && methods[method] ) {\n\t\t\treturn methods[ method ].apply( this, [].slice.call( arguments, 1 ));\n\t\t} else if ( method === 'letters' || ! method ) {\n\t\t\treturn methods.init.apply( this, [].slice.call( arguments, 0 ) ); // always pass an array\n\t\t}\n\t\t$.error( 'Method ' +  method + ' does not exist on jQuery.lettering' );\n\t\treturn this;\n\t};\n\n})(jQuery);\n"]}